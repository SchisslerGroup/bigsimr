// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// cor_convert_double
double cor_convert_double(double X, int CASE);
RcppExport SEXP _bigsimr_cor_convert_double(SEXP XSEXP, SEXP CASESEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type CASE(CASESEXP);
    rcpp_result_gen = Rcpp::wrap(cor_convert_double(X, CASE));
    return rcpp_result_gen;
END_RCPP
}
// cor_convert_matrix
arma::mat cor_convert_matrix(const arma::mat& X, int CASE);
RcppExport SEXP _bigsimr_cor_convert_matrix(SEXP XSEXP, SEXP CASESEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type CASE(CASESEXP);
    rcpp_result_gen = Rcpp::wrap(cor_convert_matrix(X, CASE));
    return rcpp_result_gen;
END_RCPP
}
// cor_randPSD
arma::mat cor_randPSD(int d, int k);
RcppExport SEXP _bigsimr_cor_randPSD(SEXP dSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(cor_randPSD(d, k));
    return rcpp_result_gen;
END_RCPP
}
// hermite
arma::vec hermite(const arma::vec& x, int n);
RcppExport SEXP _bigsimr_hermite(SEXP xSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(hermite(x, n));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP fastrank_num_avg_(SEXP);

static const R_CallMethodDef CallEntries[] = {
    {"_bigsimr_cor_convert_double", (DL_FUNC) &_bigsimr_cor_convert_double, 2},
    {"_bigsimr_cor_convert_matrix", (DL_FUNC) &_bigsimr_cor_convert_matrix, 2},
    {"_bigsimr_cor_randPSD", (DL_FUNC) &_bigsimr_cor_randPSD, 2},
    {"_bigsimr_hermite", (DL_FUNC) &_bigsimr_hermite, 2},
    {"fastrank_num_avg_", (DL_FUNC) &fastrank_num_avg_, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_bigsimr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
